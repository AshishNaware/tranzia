name: Publish APT Repo (Stable vs Testing)

on:
  workflow_run:
    workflows: ["Publish Docker Image"]
    types: [completed]

jobs:
  publish-apt:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev gnupg gh curl
          curl -fsSL https://get.docker.com | sh

      - name: Extract full and clean tag
        id: get_tag
        run: |
          TAG=$(echo "${{ github.event.workflow_run.head_branch }}" | sed 's|refs/tags/||')
          CLEAN_TAG=$(echo "$TAG" | sed 's/^v//')
          if echo "$TAG" | grep -Eq "alpha|beta|rc"; then
            DIST="testing"
          else
            DIST="stable"
          fi
          echo "tag_name=$TAG" >> $GITHUB_OUTPUT
          echo "clean_tag=$CLEAN_TAG" >> $GITHUB_OUTPUT
          echo "dist=$DIST" >> $GITHUB_OUTPUT

      - name: Authenticate GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Pull Docker image and extract binary
        run: |
          TAG=${{ steps.get_tag.outputs.tag_name }}
          docker pull ghcr.io/tranzianet/tranzia:$TAG
          docker create --name tranzia-builder ghcr.io/tranzianet/tranzia:$TAG
          docker cp tranzia-builder:/usr/local/bin/tranzia ./tranzia
          docker rm tranzia-builder
          chmod +x tranzia

      - name: Configure GPG for CI
        run: |
          export GPG_TTY=$(tty)
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf

      - name: Import GPG private key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import

      - name: Create .deb package
        run: |
          VERSION=${{ steps.get_tag.outputs.clean_tag }}
          mkdir -p package/DEBIAN package/usr/local/bin
          cat <<EOF > package/DEBIAN/control
          Package: tranzia
          Version: ${VERSION}
          Section: network
          Priority: optional
          Architecture: amd64
          Maintainer: Ashish Naware <ashishnaware3@gmail.com>
          Description: Tranzia CLI - Network testing and observability
          EOF
          cp tranzia package/usr/local/bin/
          dpkg-deb --build package tranzia_${VERSION}_amd64.deb

      - name: Upload .deb to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: tranzia_${{ steps.get_tag.outputs.clean_tag }}_amd64.deb
          tag_name: ${{ steps.get_tag.outputs.tag_name }}
          token: ${{ secrets.GH_TOKEN }}

      - name: Clone APT repository
        uses: actions/checkout@v4
        with:
          repository: tranzianet/tranzia-apt-repo
          ref: gh-pages
          path: apt-repo
          token: ${{ secrets.GH_TOKEN }}

      - name: Update APT repository (stable or testing)
        run: |
          DIST=${{ steps.get_tag.outputs.dist }}
          VERSION=${{ steps.get_tag.outputs.clean_tag }}
          cp tranzia_${VERSION}_amd64.deb apt-repo/pool/main/t/tranzia/
          cd apt-repo
          mkdir -p dists/$DIST/main/binary-amd64
          dpkg-scanpackages pool /dev/null > dists/$DIST/main/binary-amd64/Packages
          gzip -9c dists/$DIST/main/binary-amd64/Packages > dists/$DIST/main/binary-amd64/Packages.gz
          apt-ftparchive release dists/$DIST > dists/$DIST/Release
          gpg --batch --yes --pinentry-mode loopback --passphrase "${{ secrets.GPG_PASSPHRASE }}" \
            -abs -o dists/$DIST/Release.gpg dists/$DIST/Release

      - name: Commit and push APT updates
        run: |
          DIST=${{ steps.get_tag.outputs.dist }}
          VERSION=${{ steps.get_tag.outputs.clean_tag }}
          cd apt-repo
          git config user.name "Tranzia Bot"
          git config user.email "bot@tranzia.dev"
          git add .
          git commit -m "APT repo update for ${VERSION} -> ${DIST}" || echo "No changes"
          git push origin gh-pages
